"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var AdminAuthModuleFactory_1;
Object.defineProperty(exports, "__esModule", { value: true });
const typeorm_1 = require("@nestjs/typeorm");
const common_1 = require("@nestjs/common");
const adminUser_entity_1 = require("./adminUser.entity");
const adminUser_service_1 = require("./adminUser.service");
const local_strategy_1 = require("./local.strategy");
const adminUser_controller_1 = require("./adminUser.controller");
const adminCore_module_1 = require("./adminCore.module");
const defaultCoreModule = adminCore_module_1.AdminCoreModuleFactory.createAdminCoreModule({});
let AdminAuthModuleFactory = AdminAuthModuleFactory_1 = class AdminAuthModuleFactory {
    static createAdminAuthModule({ adminCoreModule = defaultCoreModule }) {
        return {
            module: AdminAuthModuleFactory_1,
            imports: [adminCoreModule],
        };
    }
};
AdminAuthModuleFactory = AdminAuthModuleFactory_1 = __decorate([
    common_1.Module({
        imports: [typeorm_1.TypeOrmModule.forFeature([adminUser_entity_1.default])],
        providers: [adminUser_service_1.AdminUserService, local_strategy_1.LocalStrategy],
        controllers: [adminUser_controller_1.AdminUserController],
        exports: [adminUser_service_1.AdminUserService],
    })
], AdminAuthModuleFactory);
exports.AdminAuthModuleFactory = AdminAuthModuleFactory;
//# sourceMappingURL=adminAuth.module.js.map