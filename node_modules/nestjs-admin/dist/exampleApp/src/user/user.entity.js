"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const typeorm_1 = require("typeorm");
const agency_entity_1 = require("./agency.entity");
const group_entity_1 = require("./group.entity");
var Gender;
(function (Gender) {
    Gender["MALE"] = "male";
    Gender["FEMALE"] = "female";
    Gender["OTHER"] = "other";
})(Gender = exports.Gender || (exports.Gender = {}));
let User = class User {
    get fullName() {
        if (this.firstName) {
            if (this.lastName) {
                return `${this.firstName} ${this.lastName}`;
            }
            return this.firstName;
        }
        return this.lastName;
    }
    toString() {
        if (this.fullName) {
            return `${this.id} - ${this.fullName}`;
        }
        return `${this.id}`;
    }
};
__decorate([
    typeorm_1.PrimaryGeneratedColumn(),
    __metadata("design:type", Number)
], User.prototype, "id", void 0);
__decorate([
    typeorm_1.Column({ length: 50, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "firstName", void 0);
__decorate([
    typeorm_1.Column({ length: 50, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "lastName", void 0);
__decorate([
    typeorm_1.Column({ length: 100, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    typeorm_1.Column({ length: 100, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "email", void 0);
__decorate([
    typeorm_1.Column('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "roles", void 0);
__decorate([
    typeorm_1.Column('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "moreRoles", void 0);
__decorate([
    typeorm_1.Column('text', { nullable: true }),
    __metadata("design:type", String)
], User.prototype, "description", void 0);
__decorate([
    typeorm_1.ManyToOne(type => agency_entity_1.Agency, agency => agency.users, { eager: true }),
    __metadata("design:type", agency_entity_1.Agency)
], User.prototype, "agency", void 0);
__decorate([
    typeorm_1.ManyToMany(type => group_entity_1.Group),
    typeorm_1.JoinTable(),
    __metadata("design:type", Array)
], User.prototype, "groups", void 0);
__decorate([
    typeorm_1.Column({ nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "weight", void 0);
__decorate([
    typeorm_1.Column('integer', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "age", void 0);
__decorate([
    typeorm_1.Column('int', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "numberOfSiblings", void 0);
__decorate([
    typeorm_1.Column('smallint', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "fingerCount", void 0);
__decorate([
    typeorm_1.Column('bigint', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "atomCount", void 0);
__decorate([
    typeorm_1.Column('float', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "height", void 0);
__decorate([
    typeorm_1.Column('decimal', { nullable: true }),
    __metadata("design:type", Number)
], User.prototype, "bmi", void 0);
__decorate([
    typeorm_1.Column({ nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "birthdate", void 0);
__decorate([
    typeorm_1.Column('date', { nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "deathdate", void 0);
__decorate([
    typeorm_1.Column('time', { nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "birthtime", void 0);
__decorate([
    typeorm_1.Column('timestamp', { nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "hireDatetime", void 0);
__decorate([
    typeorm_1.Column('boolean', { nullable: true }),
    __metadata("design:type", Boolean)
], User.prototype, "isActive", void 0);
__decorate([
    typeorm_1.Column('boolean', { nullable: false, default: true }),
    __metadata("design:type", Boolean)
], User.prototype, "isCool", void 0);
__decorate([
    typeorm_1.Column('json', { nullable: true }),
    __metadata("design:type", Object)
], User.prototype, "additionalData", void 0);
__decorate([
    typeorm_1.Column('enum', { enum: Gender, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "gender", void 0);
__decorate([
    typeorm_1.CreateDateColumn(),
    __metadata("design:type", Date)
], User.prototype, "createdDate", void 0);
__decorate([
    typeorm_1.UpdateDateColumn(),
    __metadata("design:type", Date)
], User.prototype, "updatedDate", void 0);
User = __decorate([
    typeorm_1.Entity('users')
], User);
exports.User = User;
//# sourceMappingURL=user.entity.js.map