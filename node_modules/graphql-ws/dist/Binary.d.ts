/// <reference types="node" />
import { Readable } from 'stream';
export declare type StreamFunction = (offset: number) => Readable;
export interface SerializedBinary {
    ___binary: true;
    id: number;
    hash: string;
    size: number;
}
export interface BinaryOptions {
    hash: string;
    size: number;
}
export declare class Binary {
    private static _id;
    private onStream;
    private stream;
    private id;
    private hash;
    private size;
    static isBinary(obj: Object): boolean;
    constructor(stream: StreamFunction, options: BinaryOptions | SerializedBinary);
    createReadStream(offset?: number): Readable;
    getHash(): string;
    getSize(): number;
    getId(): number;
    getStream(): Readable;
    equal(binary: Binary): boolean;
    clone(source: Binary): void;
    toJSON(): SerializedBinary;
}
