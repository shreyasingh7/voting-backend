/// <reference types="node" />
import { Writable, WritableOptions } from 'stream';
import { SocketLike } from './common';
export { Writable, WritableOptions };
export interface BinarySenderOptions {
    opId: number;
    fileId: number;
    socket: SocketLike;
}
export declare class BinarySender extends Writable {
    private static readonly HEADER_SIZE;
    private buf;
    private bufOffset;
    private seq;
    private opId;
    private fileId;
    private socket;
    constructor(opts: BinarySenderOptions, streamOpts?: WritableOptions);
    _write(chunk: Buffer, encoding?: string, callback?: Function): Promise<void>;
    _final(callback?: Function): Promise<void>;
    private waitAck();
    private sendData();
}
