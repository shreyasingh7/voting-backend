var fs = require('fs');

tee = fs.createReadStream('/home/ykiruha/Downloads/X-Men.Apocalypse.2016.x264.BDRip.(1080p).ExKinoRay.mkv');

const { Writable } = require('stream');

class MyWritable extends Writable {
  constructor(options) {
    super(options);
    this.buf = new Buffer(30 * 1024 * 1024); // 2KB
    this.bufOffset = 0;
  }
  async _write(chunk, encoding, callback) {
    let chunkOffset = 0;
setTimeout(() => {
      console.log(this.bufOffset);
    while (chunkOffset < chunk.length && this.bufOffset < this.buf.length) {
      const end = Math.min(this.buf.length - this.bufOffset, chunk.length - chunkOffset)
      const written = chunk.copy(this.buf, this.bufOffset, chunkOffset, end);
      chunkOffset += written;
      this.bufOffset += written;
    }
    if (this.bufOffset === this.buf.length) {
      //TODO: Write this.buf to some place
      console.log(this.bufOffset);
      this.bufOffset = 0;
    }
    callback();
}, 1000);
  }
}

/*
const writable = new Writable({
  write(chunk, encoding, callback) {
    console.log(chunk.length);
  },
});
*/

const writable = new MyWritable({highWaterMark: 1024 * 1024 * 10});

tee.pipe(writable);

setInterval(()=>{}, 1000);
